{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","iconStyle","safeAreaInsets","showLabel","style","tabStyle","colors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","dimensions","isKeyboardShown","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","React","useRef","tabBarVisibilityAnimationConfig","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","layout","setLayout","height","width","isLandscape","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","defaultInsets","insets","top","right","bottom","left","paddingBottom","Math","max","select","ios","default","getDefaultTabBarHeight","isPad","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","create","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const isLandscape = () => dimensions.width > dimensions.height;\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      return isLandscape();\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = Math.max(\n    insets.bottom - Platform.select({ ios: 4, default: 0 }),\n    0\n  );\n\n  const getDefaultTabBarHeight = () => {\n    if (\n      Platform.OS === 'ios' &&\n      !Platform.isPad &&\n      isLandscape() &&\n      shouldUseHorizontalLabels()\n    ) {\n      return COMPACT_TABBAR_HEIGHT;\n    }\n    return DEFAULT_TABBAR_HEIGHT;\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: getDefaultTabBarHeight() + paddingBottom,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}