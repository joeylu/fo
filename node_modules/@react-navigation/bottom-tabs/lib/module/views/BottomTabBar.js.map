{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","View","Animated","StyleSheet","Platform","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useLinkBuilder","useSafeArea","BottomTabItem","useWindowDimensions","useIsKeyboardShown","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","iconStyle","safeAreaInsets","showLabel","style","tabStyle","colors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","dimensions","isKeyboardShown","shouldShowTabBar","tabBarVisible","visibilityAnimationConfigRef","useRef","tabBarVisibilityAnimationConfig","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","layout","setLayout","height","width","isLandscape","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","flatten","maxWidth","length","defaultInsets","insets","top","right","bottom","left","paddingBottom","Math","max","select","ios","default","getDefaultTabBarHeight","isPad","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","create","borderTopWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    focusedOptions.tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current =\n      focusedOptions.tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const isLandscape = () => dimensions.width > dimensions.height;\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      return isLandscape();\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = Math.max(\n    insets.bottom - Platform.select({ ios: 4, default: 0 }),\n    0\n  );\n\n  const getDefaultTabBarHeight = () => {\n    if (\n      Platform.OS === 'ios' &&\n      !Platform.isPad &&\n      isLandscape() &&\n      shouldUseHorizontalLabels()\n    ) {\n      return COMPACT_TABBAR_HEIGHT;\n    }\n    return DEFAULT_TABBAR_HEIGHT;\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: getDefaultTabBarHeight() + paddingBottom,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}