{"version":3,"file":"Video.js","sourceRoot":"","sources":["../src/Video.tsx"],"names":[],"mappings":"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","sourcesContent":["import omit from 'lodash/omit';\nimport nullthrows from 'nullthrows';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {\n  findNodeHandle,\n  Image,\n  NativeMethods,\n  StyleSheet,\n  View,\n  ViewPropTypes,\n} from 'react-native';\n\nimport {\n  assertStatusValuesInBounds,\n  getNativeSourceAndFullInitialStatusForLoadAsync,\n  getNativeSourceFromSource,\n  getUnloadedStatus,\n  Playback,\n  PlaybackMixin,\n  AVPlaybackSource,\n  AVPlaybackStatus,\n  AVPlaybackStatusToSet,\n  AVPlaybackNativeSource,\n} from './AV';\nimport ExpoVideoManager from './ExpoVideoManager';\nimport ExponentAV from './ExponentAV';\nimport ExponentVideo from './ExponentVideo';\nimport {\n  ExponentVideoComponent,\n  VideoFullscreenUpdateEvent,\n  VideoNativeProps,\n  VideoNaturalSize,\n  VideoProps,\n  VideoReadyForDisplayEvent,\n  ResizeMode,\n  VideoState,\n} from './Video.types';\n\nexport {\n  ExponentVideoComponent,\n  VideoFullscreenUpdateEvent,\n  VideoNativeProps,\n  VideoNaturalSize,\n  VideoProps,\n  VideoReadyForDisplayEvent,\n  ResizeMode,\n  VideoState,\n  AVPlaybackStatus,\n  AVPlaybackStatusToSet,\n  AVPlaybackNativeSource,\n};\n\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = 0;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = 1;\nexport const FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = 2;\nexport const FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = 3;\n\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\nexport const IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\nconst _STYLES = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n  poster: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    resizeMode: 'contain',\n  },\n  video: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\n// On a real device UIManager should be present, however when running offline tests with jest-expo\n// we have to use the provided native module mock to access constants\nconst ExpoVideoManagerConstants = ExpoVideoManager;\nconst ExpoVideoViewManager = ExpoVideoManager;\n\nexport default class Video extends React.Component<VideoProps, VideoState> implements Playback {\n  static RESIZE_MODE_CONTAIN = ResizeMode.CONTAIN;\n  static RESIZE_MODE_COVER = ResizeMode.COVER;\n  static RESIZE_MODE_STRETCH = ResizeMode.STRETCH;\n\n  static IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = IOS_FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\n  static IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = IOS_FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\n  static IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = IOS_FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\n  static IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = IOS_FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\n  static FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT = FULLSCREEN_UPDATE_PLAYER_WILL_PRESENT;\n  static FULLSCREEN_UPDATE_PLAYER_DID_PRESENT = FULLSCREEN_UPDATE_PLAYER_DID_PRESENT;\n  static FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS = FULLSCREEN_UPDATE_PLAYER_WILL_DISMISS;\n  static FULLSCREEN_UPDATE_PLAYER_DID_DISMISS = FULLSCREEN_UPDATE_PLAYER_DID_DISMISS;\n\n  static propTypes = {\n    // Source stuff\n    source: PropTypes.oneOfType([\n      PropTypes.shape({\n        uri: PropTypes.string,\n        overrideFileExtensionAndroid: PropTypes.string,\n      }), // remote URI like { uri: 'http://foo/bar.mp4' }\n      PropTypes.number, // asset module like require('./foo/bar.mp4')\n    ]),\n    posterSource: PropTypes.oneOfType([\n      PropTypes.shape({\n        uri: PropTypes.string,\n      }), // remote URI like { uri: 'http://foo/bar.mp4' }\n      PropTypes.number, // asset module like require('./foo/bar.mp4')\n    ]),\n    posterStyle: ViewPropTypes.style,\n\n    // Callbacks\n    onPlaybackStatusUpdate: PropTypes.func,\n    onLoadStart: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n    onIOSFullscreenUpdate: PropTypes.func,\n    onFullscreenUpdate: PropTypes.func,\n    onReadyForDisplay: PropTypes.func,\n\n    // UI stuff\n    useNativeControls: PropTypes.bool,\n    resizeMode: PropTypes.string,\n    usePoster: PropTypes.bool,\n\n    // Playback API\n    status: PropTypes.shape({\n      progressUpdateIntervalMillis: PropTypes.number,\n      positionMillis: PropTypes.number,\n      shouldPlay: PropTypes.bool,\n      rate: PropTypes.number,\n      shouldCorrectPitch: PropTypes.bool,\n      volume: PropTypes.number,\n      isMuted: PropTypes.bool,\n      isLooping: PropTypes.bool,\n    }),\n    progressUpdateIntervalMillis: PropTypes.number,\n    positionMillis: PropTypes.number,\n    shouldPlay: PropTypes.bool,\n    rate: PropTypes.number,\n    shouldCorrectPitch: PropTypes.bool,\n    volume: PropTypes.number,\n    isMuted: PropTypes.bool,\n    isLooping: PropTypes.bool,\n\n    // Required by react-native\n    scaleX: PropTypes.number,\n    scaleY: PropTypes.number,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    rotation: PropTypes.number,\n    ...ViewPropTypes,\n  };\n\n  _nativeRef = React.createRef<InstanceType<ExponentVideoComponent> & NativeMethods>();\n  _onPlaybackStatusUpdate: ((status: AVPlaybackStatus) => void) | null = null;\n\n  // componentOrHandle: null | number | React.Component<any, any> | React.ComponentClass<any>\n\n  constructor(props: VideoProps) {\n    super(props);\n    this.state = {\n      showPoster: !!props.usePoster,\n    };\n  }\n\n  setNativeProps(nativeProps: VideoNativeProps) {\n    const nativeVideo = nullthrows(this._nativeRef.current);\n    nativeVideo.setNativeProps(nativeProps);\n  }\n\n  // Internal methods\n\n  _handleNewStatus = (status: AVPlaybackStatus) => {\n    if (\n      this.state.showPoster &&\n      status.isLoaded &&\n      (status.isPlaying || status.positionMillis !== 0)\n    ) {\n      this.setState({ showPoster: false });\n    }\n\n    if (this.props.onPlaybackStatusUpdate) {\n      this.props.onPlaybackStatusUpdate(status);\n    }\n    if (this._onPlaybackStatusUpdate) {\n      this._onPlaybackStatusUpdate(status);\n    }\n  };\n\n  _performOperationAndHandleStatusAsync = async (\n    operation: (tag: number) => Promise<AVPlaybackStatus>\n  ): Promise<AVPlaybackStatus> => {\n    const video = this._nativeRef.current;\n    if (!video) {\n      throw new Error(`Cannot complete operation because the Video component has not yet loaded`);\n    }\n\n    const handle = findNodeHandle(this._nativeRef.current)!;\n    const status: AVPlaybackStatus = await operation(handle);\n    this._handleNewStatus(status);\n    return status;\n  };\n\n  // ### iOS Fullscreening API ###\n\n  _setFullscreen = async (value: boolean) => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExpoVideoViewManager.setFullscreen(tag, value)\n    );\n  };\n\n  presentFullscreenPlayer = async () => {\n    return this._setFullscreen(true);\n  };\n\n  presentIOSFullscreenPlayer = () => {\n    console.warn(\n      \"You're using `presentIOSFullscreenPlayer`. Please migrate your code to use `presentFullscreenPlayer` instead.\"\n    );\n    return this.presentFullscreenPlayer();\n  };\n\n  presentFullscreenPlayerAsync = async () => {\n    return await this.presentFullscreenPlayer();\n  };\n\n  dismissFullscreenPlayer = async () => {\n    return this._setFullscreen(false);\n  };\n\n  dismissIOSFullscreenPlayer = () => {\n    console.warn(\n      \"You're using `dismissIOSFullscreenPlayer`. Please migrate your code to use `dismissFullscreenPlayer` instead.\"\n    );\n    this.dismissFullscreenPlayer();\n  };\n\n  // ### Unified playback API ### (consistent with Audio.js)\n  // All calls automatically call onPlaybackStatusUpdate as a side effect.\n\n  // Get status API\n\n  getStatusAsync = async (): Promise<AVPlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.getStatusForVideo(tag)\n    );\n  };\n\n  // Loading / unloading API\n\n  loadAsync = async (\n    source: AVPlaybackSource,\n    initialStatus: AVPlaybackStatusToSet = {},\n    downloadFirst: boolean = true\n  ): Promise<AVPlaybackStatus> => {\n    const {\n      nativeSource,\n      fullInitialStatus,\n    } = await getNativeSourceAndFullInitialStatusForLoadAsync(source, initialStatus, downloadFirst);\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.loadForVideo(tag, nativeSource, fullInitialStatus)\n    );\n  };\n\n  // Equivalent to setting URI to null.\n  unloadAsync = async (): Promise<AVPlaybackStatus> => {\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.unloadForVideo(tag)\n    );\n  };\n\n  // Set status API (only available while isLoaded = true)\n\n  setStatusAsync = async (status: AVPlaybackStatusToSet): Promise<AVPlaybackStatus> => {\n    assertStatusValuesInBounds(status);\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.setStatusForVideo(tag, status)\n    );\n  };\n\n  replayAsync = async (status: AVPlaybackStatusToSet = {}): Promise<AVPlaybackStatus> => {\n    if (status.positionMillis && status.positionMillis !== 0) {\n      throw new Error('Requested position after replay has to be 0.');\n    }\n\n    return this._performOperationAndHandleStatusAsync((tag: number) =>\n      ExponentAV.replayVideo(tag, {\n        ...status,\n        positionMillis: 0,\n        shouldPlay: true,\n      })\n    );\n  };\n\n  setOnPlaybackStatusUpdate(onPlaybackStatusUpdate: ((status: AVPlaybackStatus) => void) | null) {\n    this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n    this.getStatusAsync();\n  }\n\n  // Methods of the Playback interface that are set via PlaybackMixin\n  playAsync!: () => Promise<AVPlaybackStatus>;\n  playFromPositionAsync!: (\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ) => Promise<AVPlaybackStatus>;\n  pauseAsync!: () => Promise<AVPlaybackStatus>;\n  stopAsync!: () => Promise<AVPlaybackStatus>;\n  setPositionAsync!: (\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ) => Promise<AVPlaybackStatus>;\n  setRateAsync!: (rate: number, shouldCorrectPitch: boolean) => Promise<AVPlaybackStatus>;\n  setVolumeAsync!: (volume: number) => Promise<AVPlaybackStatus>;\n  setIsMutedAsync!: (isMuted: boolean) => Promise<AVPlaybackStatus>;\n  setIsLoopingAsync!: (isLooping: boolean) => Promise<AVPlaybackStatus>;\n  setProgressUpdateIntervalAsync!: (\n    progressUpdateIntervalMillis: number\n  ) => Promise<AVPlaybackStatus>;\n\n  // ### Callback wrappers ###\n\n  _nativeOnPlaybackStatusUpdate = (event: { nativeEvent: AVPlaybackStatus }) => {\n    this._handleNewStatus(event.nativeEvent);\n  };\n\n  // TODO make sure we are passing the right stuff\n  _nativeOnLoadStart = () => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart();\n    }\n  };\n\n  _nativeOnLoad = (event: { nativeEvent: AVPlaybackStatus }) => {\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n    this._handleNewStatus(event.nativeEvent);\n  };\n\n  _nativeOnError = (event: { nativeEvent: { error: string } }) => {\n    const error: string = event.nativeEvent.error;\n    if (this.props.onError) {\n      this.props.onError(error);\n    }\n    this._handleNewStatus(getUnloadedStatus(error));\n  };\n\n  _nativeOnReadyForDisplay = (event: { nativeEvent: VideoReadyForDisplayEvent }) => {\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _nativeOnFullscreenUpdate = (event: { nativeEvent: VideoFullscreenUpdateEvent }) => {\n    if (this.props.onIOSFullscreenUpdate && this.props.onFullscreenUpdate) {\n      console.warn(\n        \"You've supplied both `onIOSFullscreenUpdate` and `onFullscreenUpdate`. You're going to receive updates on both the callbacks.\"\n      );\n    } else if (this.props.onIOSFullscreenUpdate) {\n      console.warn(\n        \"You're using `onIOSFullscreenUpdate`. Please migrate your code to use `onFullscreenUpdate` instead.\"\n      );\n    }\n\n    if (this.props.onIOSFullscreenUpdate) {\n      this.props.onIOSFullscreenUpdate(event.nativeEvent);\n    }\n\n    if (this.props.onFullscreenUpdate) {\n      this.props.onFullscreenUpdate(event.nativeEvent);\n    }\n  };\n\n  _renderPoster = () =>\n    this.props.usePoster && this.state.showPoster ? (\n      // @ts-ignore: the react-native type declarations are overly restrictive\n      <Image style={[_STYLES.poster, this.props.posterStyle]} source={this.props.posterSource!} />\n    ) : null;\n\n  render() {\n    const source = getNativeSourceFromSource(this.props.source) || undefined;\n\n    let nativeResizeMode = ExpoVideoManagerConstants.ScaleNone;\n    if (this.props.resizeMode) {\n      const resizeMode = this.props.resizeMode;\n      if (resizeMode === ResizeMode.STRETCH) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleToFill;\n      } else if (resizeMode === ResizeMode.CONTAIN) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFit;\n      } else if (resizeMode === ResizeMode.COVER) {\n        nativeResizeMode = ExpoVideoManagerConstants.ScaleAspectFill;\n      }\n    }\n\n    // Set status via individual props\n    const status: AVPlaybackStatusToSet = { ...this.props.status };\n    [\n      'progressUpdateIntervalMillis',\n      'positionMillis',\n      'shouldPlay',\n      'rate',\n      'shouldCorrectPitch',\n      'volume',\n      'isMuted',\n      'isLooping',\n    ].forEach(prop => {\n      if (prop in this.props) {\n        status[prop] = this.props[prop];\n      }\n    });\n\n    // Replace selected native props\n    // @ts-ignore: TypeScript thinks \"children\" is not in the list of props\n    const nativeProps: VideoNativeProps = {\n      ...omit(\n        this.props,\n        'source',\n        'onPlaybackStatusUpdate',\n        'usePoster',\n        'posterSource',\n        ...Object.keys(status)\n      ),\n      style: StyleSheet.flatten([_STYLES.base, this.props.style]),\n      source,\n      resizeMode: nativeResizeMode,\n      status,\n      onStatusUpdate: this._nativeOnPlaybackStatusUpdate,\n      onLoadStart: this._nativeOnLoadStart,\n      onLoad: this._nativeOnLoad,\n      onError: this._nativeOnError,\n      onReadyForDisplay: this._nativeOnReadyForDisplay,\n      onFullscreenUpdate: this._nativeOnFullscreenUpdate,\n    };\n\n    return (\n      <View style={nativeProps.style} pointerEvents=\"box-none\">\n        <ExponentVideo ref={this._nativeRef} {...nativeProps} style={_STYLES.video} />\n        {this._renderPoster()}\n      </View>\n    );\n  }\n}\n\nObject.assign(Video.prototype, PlaybackMixin);\n"]}