{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\layout\\\\tabbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport foData from \"../content/data.json\";\nimport foMenu from \"../content/menu.json\";\nimport ErrorScreen from \"../error/error\";\nimport ContentScreen from \"./content\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar TabBar = function (_Component) {\n  _inherits(TabBar, _Component);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar() {\n    _classCallCheck(this, TabBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.list = InitTabList(this.props.menu, this.props.book);\n\n      if (this.list.length > 0) {\n        return React.createElement(Tab.Navigator, {\n          tabBarOptions: {\n            labelStyle: {\n              fontSize: 16\n            },\n            tabStyle: {\n              width: \"auto\",\n              padding: 20\n            },\n            style: {\n              backgroundColor: \"#b32400\"\n            },\n            indicatorStyle: {\n              backgroundColor: \"#ffffff\"\n            },\n            inactiveTintColor: \"#edafad\",\n            activeTintColor: \"#ffffff\",\n            scrollEnabled: true\n          },\n          sceneContainerStyle: {\n            backgroundColor: \"#ffffff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }\n        }, this.list.map(function (item, i) {\n          return React.createElement(Tab.Screen, {\n            key: i,\n            name: \"menu\" + item.id,\n            options: {\n              title: item.title\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }\n          }, function (props) {\n            return React.createElement(ContentScreen, _extends({}, props, {\n              book: _this.props.book,\n              menu: _this.props.book > 0 ? _this.props.menu : item.id,\n              section: _this.props.book > 0 ? item.id : _this.props.section,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 27\n              }\n            }));\n          });\n        }));\n      } else {\n        console.log(\"error home\");\n        return this.props.navigation.push(\"Page\", {\n          menu: 0,\n          book: 0,\n          section: 0\n        });\n      }\n    }\n  }]);\n\n  return TabBar;\n}(Component);\n\nexport { TabBar as default };\n\nfunction InitTabList(menuID, bookID) {\n  if (menuID == 0) {\n    return foMenu;\n  } else if (menuID > 0 && bookID > 0) {\n    var list = foData.find(function (item) {\n      return item.id == bookID;\n    });\n    if (list && list.sections) return list.sections;\n  }\n\n  return [];\n}","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/layout/tabbar.js"],"names":["React","Component","createMaterialTopTabNavigator","foData","foMenu","ErrorScreen","ContentScreen","Tab","TabBar","list","InitTabList","props","menu","book","length","labelStyle","fontSize","tabStyle","width","padding","style","backgroundColor","indicatorStyle","inactiveTintColor","activeTintColor","scrollEnabled","map","item","i","id","title","section","console","log","navigation","push","menuID","bookID","find","sections"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\n\r\nimport foData from \"../content/data.json\";\r\nimport foMenu from \"../content/menu.json\";\r\n\r\nimport ErrorScreen from \"../error/error\";\r\nimport ContentScreen from \"./content\";\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\nexport default class TabBar extends Component {\r\n  render() {\r\n    //get header title\r\n    //TO-DO\r\n    //get tab list\r\n    this.list = InitTabList(this.props.menu, this.props.book);\r\n    //console.log(this.list.length);\r\n    if (this.list.length > 0) {\r\n      return (\r\n        <Tab.Navigator\r\n          tabBarOptions={{\r\n            labelStyle: { fontSize: 16 },\r\n            tabStyle: {width: \"auto\", padding: 20},\r\n            style : { backgroundColor: \"#b32400\" },\r\n            indicatorStyle: {backgroundColor: \"#ffffff\"},\r\n            inactiveTintColor: \"#edafad\",\r\n            activeTintColor : \"#ffffff\",\r\n            scrollEnabled: true\r\n          }}        \r\n          sceneContainerStyle={{backgroundColor: \"#ffffff\"}}\r\n          //tabBar={(props) => <BookSection {...props} source={foMenu} />}\r\n        >\r\n          {\r\n            this.list.map((item, i) => (\r\n              <Tab.Screen \r\n                key={i} \r\n                name={\"menu\" + item.id} \r\n                options={{ title: item.title }}\r\n              >\r\n                {props => <ContentScreen {...props} \r\n                  book={this.props.book} \r\n                  menu={this.props.book > 0 ? this.props.menu : item.id} \r\n                  section={this.props.book > 0 ? item.id : this.props.section} />}\r\n              </Tab.Screen>\r\n            ))\r\n          }\r\n        </Tab.Navigator>\r\n      );\r\n    } else {\r\n      //return home\r\n      console.log(\"error home\");\r\n      return this.props.navigation.push(\"Page\", {menu: 0, book: 0, section: 0});\r\n    }\r\n  }\r\n}\r\n\r\nfunction InitTabList(menuID, bookID){\r\n  //console.log(\"tablist: \" + menuID + \": \" + bookID);\r\n  if (menuID == 0) {\r\n    return foMenu;\r\n  } else if(menuID > 0 && bookID > 0) {\r\n    let list = foData.find(item => item.id == bookID);\r\n    if (list && list.sections) return list.sections;\r\n  }\r\n  return [];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}