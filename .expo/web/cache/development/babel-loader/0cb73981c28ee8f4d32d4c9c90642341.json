{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\sites\\\\fo-github\\\\app\\\\layout\\\\download.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"../content/css/styles\";\nimport AppContext from \"../utilities/context\";\nimport constants from \"../utilities/constants.json\";\nimport { Icon } from \"react-native-elements\";\nimport CircularProgress from \"./progress\";\nimport { DownloadFile } from \"../utilities/files\";\nimport * as RootNavigation from \"../utilities/navigator\";\n\nvar DownloadBtn = function (_Component) {\n  _inherits(DownloadBtn, _Component);\n\n  var _super = _createSuper(DownloadBtn);\n\n  function DownloadBtn(props) {\n    _classCallCheck(this, DownloadBtn);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(DownloadBtn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GetBtn, {\n        media: this.props.media,\n        title: this.props.title,\n        book: this.props.book,\n        menu: this.props.menu,\n        updateMediaExist: this.props.updateMediaExist,\n        mediaExist: this.props.mediaExist,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return DownloadBtn;\n}(Component);\n\nexport { DownloadBtn as default };\n\nvar GetBtn = function GetBtn(props) {\n  var appStateContext = useContext(AppContext);\n\n  function handler(percent, error) {\n    if (typeof error === \"undefined\") {\n      appStateContext.set_download_progress(percent);\n      appStateContext.set_download_status(constants.downloadStatus.downloading);\n    } else {\n      console.log(\"handler error: \" + error);\n      appStateContext.set_download_progress(0);\n      appStateContext.set_download_status(constants.downloadStatus.notStarted);\n      Alert.alert(\"下载出错\", \"下载中出现异常问题，请尝试重新下载\");\n    }\n\n    console.log(\"current download: \" + appStateContext.downloadProgress + \"%, \" + appStateContext.downloadStatus + \", \" + props.media + \" / \" + appStateContext.downloadMedia + \" --> \" + percent);\n  }\n\n  if (props.media === appStateContext.downloadMedia) {\n    if (appStateContext.downloadStatus !== constants.downloadStatus.notStarted) {\n      if (appStateContext.downloadStatus === constants.downloadStatus.started) {\n        try {\n          console.log(\"start download: \" + appStateContext.downloadStatus);\n          appStateContext.set_download_status(constants.downloadStatus.downloading);\n          DownloadFile(props.media, handler).then(function (result) {\n            console.log(\"downloadFile Result: \" + JSON.stringify(result));\n\n            if (result.status == 200) {\n              appStateContext.set_download_status(constants.downloadStatus.notStarted);\n            } else {\n              handler(0, \"下载中发生错误\");\n              appStateContext.set_download_status(constants.downloadStatus.notStarted);\n            }\n          }).catch(function (error) {\n            console.log(\"downloadFile: \" + appStateContext.downloadStatus);\n            handler(0, error);\n            appStateContext.set_download_status(constants.downloadStatus.notStarted);\n          }).finally(function () {\n            props.updateMediaExist(true);\n          });\n        } catch (e) {\n          handler(0, e);\n          appStateContext.set_download_status(constants.downloadStatus.notStarted);\n        }\n      }\n\n      return React.createElement(GetProgressBtn, {\n        media: props.media,\n        progress: appStateContext.downloadProgress,\n        title: props.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return React.createElement(GetDefaultBtn, {\n        media: props.media,\n        title: props.title,\n        mediaExist: props.mediaExist,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }\n      });\n    }\n  } else {\n    return React.createElement(GetDefaultBtn, {\n      media: props.media,\n      title: props.title,\n      mediaExist: props.mediaExist,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nvar GetDefaultBtn = function GetDefaultBtn(props) {\n  if (props.mediaExist === true) {\n    return React.createElement(GetProgressBtn, {\n      media: props.media,\n      title: props.title,\n      progress: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(GetDownloadBtn, {\n      media: props.media,\n      title: props.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nvar GetProgressBtn = function GetProgressBtn(props) {\n  var appStateContext = useContext(AppContext);\n  appStateContext.set_download_media(props.media);\n  return React.createElement(TouchableOpacity, {\n    style: styles.headerDownloading,\n    onPress: function onPress() {\n      if (appStateContext.downloadStatus === constants.downloadStatus.downloading) {\n        Alert.alert(\"正在下载\", \"当前音频正在下载中，下载进度 \" + props.progress.toFixed(1) + \"%，请稍后。\");\n      } else {\n        Alert.alert(\"重新下载\", \"音频已经下载，是否要重新下载？\", [{\n          text: \"取消\",\n          onPress: function onPress() {\n            console.log(\"Cancel Pressed \" + props.title);\n          },\n          style: \"cancel\"\n        }, {\n          text: \"确认\",\n          onPress: function onPress() {\n            console.log(\"OK Pressed \" + props.title);\n\n            if (appStateContext.downloadStatus === constants.downloadStatus.notStarted) {\n              console.log(\"restart download \" + props.title);\n              appStateContext.set_download_media(props.media);\n              appStateContext.set_download_progress(0);\n              appStateContext.set_download_status(constants.downloadStatus.started);\n            } else {\n              Alert.alert(\"请稍后\", \"(\" + appStateContext.downloadMedia + \")音频正在下载，请稍后\");\n            }\n          }\n        }], {\n          cancelable: true\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, React.createElement(CircularProgress, {\n    size: 25,\n    strokeWidth: 5,\n    progressPercent: props.progress,\n    text: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar GetDownloadButtonPressed = function GetDownloadButtonPressed(props) {\n  var appStateContext = useContext(AppContext);\n};\n\nvar GetDownloadBtn = function GetDownloadBtn(props) {\n  var appStateContext = useContext(AppContext);\n  return React.createElement(Icon, {\n    name: \"download\",\n    onPress: function onPress() {\n      console.log(\"GetDownloadBtn: \" + appStateContext.downloadStatus);\n\n      if (appStateContext.downloadStatus === constants.downloadStatus.notStarted) {\n        appStateContext.set_download_media(props.media);\n        appStateContext.set_download_progress(0);\n        appStateContext.set_download_status(constants.downloadStatus.started);\n        console.log(\"GetDownloadBtn: \" + appStateContext.downloadMedia);\n      } else {\n        Alert.alert(\"请稍后\", \"其他(\" + appStateContext.downloadMedia + \")音频正在下载，请稍后\");\n      }\n    },\n    type: \"font-awesome\",\n    color: \"#ffffff\",\n    containerStyle: styles.headerDownload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["C:/sites/fo-github/app/layout/download.js"],"names":["React","Component","useContext","styles","AppContext","constants","Icon","CircularProgress","DownloadFile","RootNavigation","DownloadBtn","props","media","title","book","menu","updateMediaExist","mediaExist","GetBtn","appStateContext","handler","percent","error","set_download_progress","set_download_status","downloadStatus","downloading","console","log","notStarted","Alert","alert","downloadProgress","downloadMedia","started","then","result","JSON","stringify","status","catch","finally","e","GetDefaultBtn","GetProgressBtn","set_download_media","headerDownloading","progress","toFixed","text","onPress","style","cancelable","GetDownloadButtonPressed","GetDownloadBtn","headerDownload"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from \"react\";\r\nimport { View, Text, TouchableOpacity, Alert } from \"react-native\";\r\nimport styles from \"../content/css/styles\";\r\nimport AppContext from \"../utilities/context\";\r\nimport constants from \"../utilities/constants.json\";\r\nimport { Icon } from \"react-native-elements\";\r\nimport CircularProgress from \"./progress\";\r\nimport { DownloadFile } from \"../utilities/files\";\r\nimport * as RootNavigation from '../utilities/navigator';\r\n\r\nexport default class DownloadBtn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {    \r\n    //return <View></View> \r\n    return <GetBtn media={this.props.media} title={this.props.title} book={this.props.book} menu={this.props.menu} updateMediaExist={this.props.updateMediaExist} mediaExist={this.props.mediaExist} />;\r\n  }\r\n}\r\n/*\r\n  get current book media file name\r\n  if book media == download media and download status is downloading or started, show progress bar\r\n  otherwise:\r\n  if the media is found in local, show complete progress bar\r\n  if the media is not found, show download btn\r\n\r\n  when download btn or redownload is confirmed\r\n  if download status is downloading or started, show wait message\r\n  otherwise, start download\r\n*/\r\nconst GetBtn = props => {\r\n  const appStateContext = useContext(AppContext);\r\n  function handler(percent, error) {\r\n    if (typeof error === \"undefined\") {\r\n      appStateContext.set_download_progress(percent);\r\n      appStateContext.set_download_status(constants.downloadStatus.downloading);\r\n    } else {\r\n      //error timout\r\n      console.log(\"handler error: \" + error);\r\n      appStateContext.set_download_progress(0);\r\n      appStateContext.set_download_status(constants.downloadStatus.notStarted);\r\n      Alert.alert(\"下载出错\", \"下载中出现异常问题，请尝试重新下载\");\r\n    }\r\n    console.log(\r\n      \"current download: \" +\r\n        appStateContext.downloadProgress +\r\n        \"%, \" +\r\n        appStateContext.downloadStatus +\r\n        \", \" +\r\n        props.media +\r\n        \" / \" +\r\n        appStateContext.downloadMedia +\r\n        \" --> \" +\r\n        percent\r\n    );\r\n  }\r\n\r\n  //if the current book media is matching the download media\r\n  if (props.media === appStateContext.downloadMedia) {\r\n    //show progress icon only if its status is downloading or started or completed\r\n    if (\r\n      appStateContext.downloadStatus !== constants.downloadStatus.notStarted\r\n    ) {\r\n      //start call download function when status changes to started\r\n      if (\r\n        appStateContext.downloadStatus === constants.downloadStatus.started \r\n      ) {\r\n        try {\r\n          console.log(\"start download: \" + appStateContext.downloadStatus);\r\n          appStateContext.set_download_status(\r\n            constants.downloadStatus.downloading\r\n          );\r\n            DownloadFile(props.media, handler)\r\n            .then(result => {\r\n              console.log(\"downloadFile Result: \" + JSON.stringify(result));\r\n              if (result.status == 200) {          \r\n                //once download is completed, change download status back to not started      \r\n                appStateContext.set_download_status(\r\n                  constants.downloadStatus.notStarted\r\n                );\r\n              } else {\r\n                handler(0, \"下载中发生错误\");\r\n                appStateContext.set_download_status(\r\n                  constants.downloadStatus.notStarted\r\n                );\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log(\"downloadFile: \" + appStateContext.downloadStatus);\r\n              handler(0, error);\r\n              appStateContext.set_download_status(\r\n                constants.downloadStatus.notStarted\r\n              );\r\n            })\r\n            .finally(()=>{\r\n              //Alert.alert(\"下载完成\", \"文件已储存在: \" + result.uri);         \r\n              //RootNavigation.push('Page', { menu: props.menu, book: props.book, section: 0, article: -1 });                 \r\n              props.updateMediaExist(true); \r\n            });\r\n          //<DownloadMedia media={props.media} handler={handler} />\r\n        } catch (e) {\r\n          handler(0, e);\r\n          appStateContext.set_download_status(\r\n            constants.downloadStatus.notStarted\r\n          );\r\n        }\r\n      }\r\n      //right after download started, the handler will change the status to downloading, show progress here\r\n      return (\r\n        <GetProgressBtn\r\n          media={props.media}\r\n          progress={appStateContext.downloadProgress}\r\n          title={props.title}\r\n        />\r\n      );\r\n    } else {\r\n      //if current downloading media is current book media, but downloading is not yet started\r\n      return <GetDefaultBtn media={props.media} title={props.title} mediaExist={props.mediaExist} />;\r\n    }\r\n  } else {\r\n    //if current downloading media is not current book media\r\n    return <GetDefaultBtn media={props.media} title={props.title} mediaExist={props.mediaExist} />;\r\n  }\r\n};\r\n\r\nconst GetDefaultBtn = props => {\r\n  if (props.mediaExist === true) {\r\n    return <GetProgressBtn media={props.media} title={props.title} progress={100} />;\r\n  } else {\r\n    return <GetDownloadBtn media={props.media} title={props.title} />;\r\n  }\r\n};\r\nconst GetProgressBtn = props => {  \r\n  //console.log(\"download debug 003: \" + props.media + \" / \" + props.progress);\r\n  const appStateContext = useContext(AppContext);\r\n  appStateContext.set_download_media(props.media);\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.headerDownloading}\r\n      onPress={() => {\r\n        if ( appStateContext.downloadStatus === constants.downloadStatus.downloading ) {\r\n          Alert.alert(\r\n            \"正在下载\",\r\n            \"当前音频正在下载中，下载进度 \" + props.progress.toFixed(1) + \"%，请稍后。\"\r\n          );\r\n        } else {          \r\n          Alert.alert(\r\n            \"重新下载\",\r\n            \"音频已经下载，是否要重新下载？\",\r\n            [\r\n              {\r\n                text: \"取消\",\r\n                onPress: () => { \r\n                  console.log(\"Cancel Pressed \" + props.title);\r\n                },\r\n                style: \"cancel\",\r\n              },\r\n              {\r\n                text: \"确认\",\r\n                onPress: () => {\r\n                  console.log(\"OK Pressed \" + props.title);\r\n                  if ( appStateContext.downloadStatus === constants.downloadStatus.notStarted ) {\r\n                    console.log(\"restart download \" + props.title);\r\n                    appStateContext.set_download_media(props.media);\r\n                    appStateContext.set_download_progress(0);\r\n                    appStateContext.set_download_status(constants.downloadStatus.started);\r\n                  } else {\r\n                    Alert.alert(\"请稍后\", \"(\"+ appStateContext.downloadMedia +\")音频正在下载，请稍后\");\r\n                  }\r\n                },\r\n              },\r\n            ],\r\n            { cancelable: true }\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <CircularProgress\r\n        size={25}\r\n        strokeWidth={5}\r\n        progressPercent={props.progress}\r\n        text={\"\"}\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\nconst GetDownloadButtonPressed = props => {\r\n  const appStateContext = useContext(AppContext);\r\n}\r\nconst GetDownloadBtn = props => {\r\n  const appStateContext = useContext(AppContext);\r\n  return (\r\n    <Icon\r\n      name=\"download\"\r\n      onPress={() => {\r\n        console.log(\"GetDownloadBtn: \" + appStateContext.downloadStatus);\r\n        if (\r\n          appStateContext.downloadStatus === constants.downloadStatus.notStarted\r\n        ) {\r\n          appStateContext.set_download_media(props.media);\r\n          appStateContext.set_download_progress(0);\r\n          appStateContext.set_download_status(constants.downloadStatus.started);\r\n          console.log(\"GetDownloadBtn: \" + appStateContext.downloadMedia);\r\n        } else {\r\n          Alert.alert(\"请稍后\", \"其他(\"+ appStateContext.downloadMedia +\")音频正在下载，请稍后\");\r\n        }\r\n      }}\r\n      type=\"font-awesome\"\r\n      color=\"#ffffff\"\r\n      containerStyle={styles.headerDownload}\r\n    />\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}