{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\layout\\\\tabbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-reanimated\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport foData from \"../content/data.json\";\nimport foMenu from \"../content/menu.json\";\nimport ErrorScreen from \"../error/error\";\nimport ContentScreen from \"./content\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar TabBar = function (_Component) {\n  _inherits(TabBar, _Component);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar(props) {\n    _classCallCheck(this, TabBar);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        tabBar: function tabBar(props) {\n          return React.createElement(BookSection, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 28\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Content\",\n        component: ContentScreen,\n        options: {\n          title: 'My home'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Error\",\n        component: ErrorScreen,\n        options: {\n          title: 'Another Page'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TabBar;\n}(Component);\n\nexport { TabBar as default };\n\nfunction BookSection(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation,\n      position = _ref.position;\n  console.log(state.routes);\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      padding: 20,\n      backgroundColor: \"#b32400\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: \"tabPress\",\n        target: route.key\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        console.log();\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: \"tabLongPress\",\n        target: route.key\n      });\n    };\n\n    var inputRange = state.routes.map(function (_, i) {\n      return i;\n    });\n    var opacity = Animated.interpolate(position, {\n      inputRange: inputRange,\n      outputRange: inputRange.map(function (i) {\n        return i === index ? 1 : 0.5;\n      })\n    });\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? [\"selected\"] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, React.createElement(Animated.Text, {\n      style: {\n        opacity: opacity,\n        color: \"#ffffff\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, label));\n  }));\n}","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/layout/tabbar.js"],"names":["React","Component","Animated","createMaterialTopTabNavigator","foData","foMenu","ErrorScreen","ContentScreen","Tab","TabBar","props","title","BookSection","state","descriptors","navigation","position","console","log","routes","flexDirection","padding","backgroundColor","map","route","index","options","key","label","tabBarLabel","undefined","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","inputRange","_","i","opacity","interpolate","outputRange","tabBarAccessibilityLabel","tabBarTestID","flex","color","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, TouchableOpacity, Text, StyleSheet } from \"react-native\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport foData from \"../content/data.json\";\r\nimport foMenu from \"../content/menu.json\";\r\n\r\nimport ErrorScreen from \"../error/error\";\r\nimport ContentScreen from \"./content\";\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\nexport default class TabBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Navigator\r\n        tabBar={(props) => <BookSection {...props} />}\r\n      >\r\n        <Tab.Screen name=\"Content\" component={ContentScreen} options={{ title: 'My home' }} />\r\n        <Tab.Screen name=\"Error\" component={ErrorScreen} options={{ title: 'Another Page' }}  />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nfunction BookSection({ state, descriptors, navigation, position }) {\r\n  console.log(state.routes);\r\n  return (\r\n    <View style={{ flexDirection: \"row\", padding: 20, backgroundColor: \"#b32400\" }}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n            ? options.title\r\n            : route.name;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n          });\r\n\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            console.log();\r\n            navigation.navigate(route.name);\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n          });\r\n        };\r\n        // modify inputRange for custom behavior\r\n        const inputRange = state.routes.map((_, i) => i);\r\n        const opacity = Animated.interpolate(position, {\r\n          inputRange,\r\n          outputRange: inputRange.map((i) => (i === index ? 1 : 0.5)),\r\n        });\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            accessibilityRole=\"button\"\r\n            accessibilityStates={isFocused ? [\"selected\"] : []}\r\n            accessibilityLabel={options.tabBarAccessibilityLabel}\r\n            testID={options.tabBarTestID}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n            style={{ flex: 1 }}            \r\n          >\r\n            <Animated.Text style={{ opacity, color: \"#ffffff\", textAlign: \"center\" }}>{label}</Animated.Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}