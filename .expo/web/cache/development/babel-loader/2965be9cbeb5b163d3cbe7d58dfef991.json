{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\sites\\\\fo-github\\\\app\\\\layout\\\\tabbar.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useContext } from \"react\";\nimport AppContext from \"../utilities/context\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport foData from \"../content/data.json\";\nimport foMenu from \"../content/menu.json\";\nimport ErrorScreen from \"../error/error\";\nimport ContentScreen from \"./content\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar TabBar = function (_Component) {\n  _inherits(TabBar, _Component);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar() {\n    _classCallCheck(this, TabBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"tabbar: \" + this.props.article);\n      this.list = InitTabList(this.props.menu, this.props.book, this.props.section, this.props.article);\n\n      if (this.list.length > 0) {\n        return React.createElement(TabStyle, {\n          list: this.list,\n          props: this.props,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return this.props.navigation.push(\"Page\", {\n          menu: 0,\n          book: 0,\n          section: 0,\n          article: -1\n        });\n      }\n    }\n  }]);\n\n  return TabBar;\n}(Component);\n\nexport { TabBar as default };\n\nvar TabStyle = function TabStyle(values) {\n  var appStateContext = useContext(AppContext);\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      labelStyle: {\n        fontSize: 16\n      },\n      tabStyle: {\n        width: \"auto\",\n        padding: 20\n      },\n      style: appStateContext.settingThemeTabBackgroundColor,\n      indicatorStyle: {\n        backgroundColor: \"#ffffff\"\n      },\n      inactiveTintColor: \"#edafad\",\n      activeTintColor: \"#ffffff\",\n      scrollEnabled: true\n    },\n    sceneContainerStyle: {\n      backgroundColor: \"#ffffff\"\n    },\n    initialRouteName: values.props.article == 0 ? \"tab1\" : \"tab\" + values.props.article,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, values.list.map(function (item, i) {\n    return React.createElement(Tab.Screen, {\n      key: i,\n      name: \"tab\" + item.id,\n      options: {\n        title: item.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, function (props) {\n      return React.createElement(ContentScreen, _extends({}, values.props, {\n        menu: values.props.menu > 0 ? values.props.menu : item.id,\n        book: values.props.book,\n        section: values.props.book > 0 ? values.props.article >= 0 ? values.props.section : item.id : 0,\n        article: values.props.article >= 0 ? item.id : -1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }\n      }));\n    });\n  }));\n};\n\nfunction InitTabList(menuID, bookID, sectionID, articleID) {\n  if (menuID <= 0) {\n    return foMenu;\n  } else if (bookID > 0) {\n    var book = foData.find(function (item) {\n      return item.id == bookID;\n    });\n\n    if (articleID < 0) {\n      if (book.sections) return book.sections;\n    } else {\n      var bookSection = book.sections.find(function (item) {\n        return item.id == sectionID;\n      });\n      if (bookSection) return bookSection.list;\n    }\n  }\n\n  return [];\n}","map":{"version":3,"sources":["C:/sites/fo-github/app/layout/tabbar.js"],"names":["React","Component","useContext","AppContext","createMaterialTopTabNavigator","foData","foMenu","ErrorScreen","ContentScreen","Tab","TabBar","console","log","props","article","list","InitTabList","menu","book","section","length","navigation","push","TabStyle","values","appStateContext","labelStyle","fontSize","tabStyle","width","padding","style","settingThemeTabBackgroundColor","indicatorStyle","backgroundColor","inactiveTintColor","activeTintColor","scrollEnabled","map","item","i","id","title","menuID","bookID","sectionID","articleID","find","sections","bookSection"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from \"react\";\r\nimport AppContext from \"../utilities/context\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\n\r\nimport foData from \"../content/data.json\";\r\nimport foMenu from \"../content/menu.json\";\r\n\r\nimport ErrorScreen from \"../error/error\";\r\nimport ContentScreen from \"./content\";\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\nexport default class TabBar extends Component {\r\n  render() {    \r\n    console.log(\"tabbar: \" + this.props.article);\r\n    this.list = InitTabList(this.props.menu, this.props.book, this.props.section, this.props.article);\r\n    if (this.list.length > 0) {\r\n      return <TabStyle list = {this.list} props = {this.props} />\r\n    } else {\r\n      //return home\r\n      //console.log(\"error home\");\r\n      return this.props.navigation.push(\"Page\", {menu: 0, book: 0, section: 0, article: -1});\r\n    }\r\n  }\r\n}\r\n\r\nconst TabStyle = values => {\r\n  const appStateContext = useContext(AppContext);\r\n  return (    \r\n    <Tab.Navigator\r\n      tabBarOptions={{\r\n        labelStyle: { fontSize: 16 },\r\n        tabStyle: {width: \"auto\", padding: 20},\r\n        style : appStateContext.settingThemeTabBackgroundColor,\r\n        indicatorStyle: {backgroundColor: \"#ffffff\"},\r\n        inactiveTintColor: \"#edafad\",\r\n        activeTintColor : \"#ffffff\",\r\n        scrollEnabled: true\r\n      }}        \r\n      sceneContainerStyle={{backgroundColor: \"#ffffff\"}}\r\n      initialRouteName= {values.props.article == 0 ? \"tab1\" : \"tab\" + values.props.article}\r\n    >\r\n      {\r\n        values.list.map((item, i) => (\r\n          /*\r\n            based on the different state, this tabbar item can be \r\n            a foMenu's root section\r\n            a book's section list\r\n            a section's list\r\n          */\r\n          <Tab.Screen \r\n            key={i} \r\n            name={\"tab\" + item.id} \r\n            options={{ title: item.title }}\r\n          >\r\n            {props => <ContentScreen {...values.props} \r\n              menu={values.props.menu > 0 ? values.props.menu : item.id} //when menu id is 0, this item.id is a foMenu section id\r\n              book={values.props.book} \r\n              //when book id is presented, this item.id is a section id of this book\r\n              //when article id is presented either, inherits from previous\r\n              section={values.props.book > 0 ? (values.props.article >= 0 ? values.props.section : item.id) : 0}\r\n              article={values.props.article >= 0 ? item.id : -1} //when an article id is presented, this item.id is an article id of a section of a book\r\n            />}\r\n          </Tab.Screen>\r\n        ))\r\n      }\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction InitTabList(menuID, bookID, sectionID, articleID){\r\n  //console.log(\"tablist: \" + menuID + \": \" + bookID);\r\n  if (menuID <= 0) {\r\n    //when menuID is not provided, get the root of Fo\r\n    return foMenu;\r\n  } else if(bookID > 0) {\r\n    const book = foData.find(item => item.id == bookID);\r\n    if ( articleID < 0) {\r\n      //when book ID is provided and article index is not set, get book sections\r\n      if (book.sections) return book.sections;\r\n    } else {\r\n      //when book ID is provided and article index is set, get articles from the section\r\n      const bookSection = book.sections.find(item => item.id == sectionID);\r\n      if (bookSection) return bookSection.list;\r\n    }\r\n  } \r\n  return [];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}