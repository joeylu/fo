{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\book\\\\navigator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { TabNavigator } from 'react-navigation/native';\nimport SectionPage from \"./section\";\nimport ErrorPage from \"../error/error\";\n\nvar NavTabs = function (_Component) {\n  _inherits(NavTabs, _Component);\n\n  var _super = _createSuper(NavTabs);\n\n  function NavTabs() {\n    _classCallCheck(this, NavTabs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavTabs, [{\n    key: \"render\",\n    value: function render() {\n      var MainScreenNavigator = TabNavigator(SectionScreens(this.props.data, this.props.navigation, this.props.bookID), {\n        animationEnabled: true,\n        tabBarOptions: {\n          scrollEnabled: true,\n          activeTintColor: '#e91e63',\n          labelStyle: {\n            fontSize: 16,\n            color: '#ffffff'\n          },\n          tabStyle: {\n            height: 56,\n            width: 125\n          },\n          style: {\n            backgroundColor: '#ffcc00'\n          }\n        }\n      });\n      return React.createElement(MainScreenNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return NavTabs;\n}(Component);\n\nexport { NavTabs as default };\n\nfunction SectionScreens(data, navigation, bookID) {\n  var screens = {};\n\n  if (data.length > 0) {\n    data.map(function (scr, i) {\n      screens[i] = {\n        screen: function screen(props) {\n          return React.createElement(SectionPage, {\n            data: scr,\n            navigation: navigation,\n            bookID: bookID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 26\n            }\n          });\n        },\n        navigationOptions: {\n          tabBarLabel: scr.title.length > 6 ? scr.title.substr(0, 5).concat('..') : scr.title\n        }\n      };\n    });\n  } else {\n    screens[0] = {\n      screen: function screen(props) {\n        return React.createElement(ErrorPage, {\n          msg: \"No data record found\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 24\n          }\n        });\n      },\n      navigationOptions: {\n        tabBarLabel: \"Fatal error occurred\"\n      }\n    };\n  }\n\n  return screens;\n}\n\nNavTabs.router = SectionPage.router;","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/book/navigator.js"],"names":["React","Component","TabNavigator","SectionPage","ErrorPage","NavTabs","MainScreenNavigator","SectionScreens","props","data","navigation","bookID","animationEnabled","tabBarOptions","scrollEnabled","activeTintColor","labelStyle","fontSize","color","tabStyle","height","width","style","backgroundColor","screens","length","map","scr","i","screen","navigationOptions","tabBarLabel","title","substr","concat","router"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;;IAEqBC,O;;;;;;;;;;;;;6BACX;AACN,UAAMC,mBAAmB,GAAGJ,YAAY,CAACK,cAAc,CAAC,KAAKC,KAAL,CAAWC,IAAZ,EAAkB,KAAKD,KAAL,CAAWE,UAA7B,EAAyC,KAAKF,KAAL,CAAWG,MAApD,CAAf,EAA4E;AAClHC,QAAAA,gBAAgB,EAAE,IADgG;AAElHC,QAAAA,aAAa,EAAE;AACbC,UAAAA,aAAa,EAAE,IADF;AAEbC,UAAAA,eAAe,EAAE,SAFJ;AAGbC,UAAAA,UAAU,EAAE;AAAEC,YAAAA,QAAQ,EAAE,EAAZ;AAAgBC,YAAAA,KAAK,EAAE;AAAvB,WAHC;AAIbC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,MAAM,EAAE,EAAV;AAAcC,YAAAA,KAAK,EAAE;AAArB,WAJG;AAKbC,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ;AALM;AAFmG,OAA5E,CAAxC;AAYA,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAjBkCtB,S;;SAAhBI,O;;AAoBrB,SAASE,cAAT,CAAwBE,IAAxB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkD;AAChD,MAAIa,OAAO,GAAG,EAAd;;AACA,MAAIf,IAAI,CAACgB,MAAL,GAAc,CAAlB,EAAqB;AACnBhB,IAAAA,IAAI,CAACiB,GAAL,CAAS,UAACC,GAAD,EAAKC,CAAL,EAAW;AAClBJ,MAAAA,OAAO,CAACI,CAAD,CAAP,GAAa;AACXC,QAAAA,MAAM,EAAE,gBAAArB,KAAK;AAAA,iBAAI,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAEmB,GAAnB;AAAwB,YAAA,UAAU,EAAEjB,UAApC;AAAgD,YAAA,MAAM,EAAIC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,SADF;AAEXmB,QAAAA,iBAAiB,EAAE;AACjBC,UAAAA,WAAW,EAAEJ,GAAG,CAACK,KAAJ,CAAUP,MAAV,GAAiB,CAAjB,GAAqBE,GAAG,CAACK,KAAJ,CAAUC,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,MAAvB,CAA8B,IAA9B,CAArB,GAA2DP,GAAG,CAACK;AAD3D;AAFR,OAAb;AAOD,KARD;AASD,GAVD,MAUO;AACLR,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa;AACXK,MAAAA,MAAM,EAAE,gBAAArB,KAAK;AAAA,eAAI,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OADF;AAEXsB,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,WAAW,EAAE;AADI;AAFR,KAAb;AAMD;;AACD,SAAOP,OAAP;AACD;;AAGDnB,OAAO,CAAC8B,MAAR,GAAiBhC,WAAW,CAACgC,MAA7B","sourcesContent":["import React, { Component } from 'react';\r\nimport { TabNavigator } from 'react-navigation/native';\r\nimport SectionPage from './section';\r\nimport ErrorPage from '../error/error';\r\n\r\nexport default class NavTabs extends Component {      \r\n  render(){        \r\n    const MainScreenNavigator = TabNavigator(SectionScreens(this.props.data, this.props.navigation, this.props.bookID), {\r\n      animationEnabled: true,\r\n      tabBarOptions: {\r\n        scrollEnabled: true,\r\n        activeTintColor: '#e91e63',\r\n        labelStyle: { fontSize: 16, color: '#ffffff' },\r\n        tabStyle: { height: 56, width: 125 },\r\n        style: {\r\n          backgroundColor: '#ffcc00',\r\n        },\r\n      },\r\n    });\r\n    return (    \r\n      <MainScreenNavigator />\r\n    );\r\n  }\r\n}\r\n\r\nfunction SectionScreens(data, navigation, bookID) {  \r\n  var screens = {};\r\n  if (data.length > 0) {\r\n    data.map((scr,i) => {    \r\n      screens[i] = {\r\n        screen: props => <SectionPage data={scr} navigation={navigation} bookID = {bookID} />,\r\n        navigationOptions: {\r\n          tabBarLabel: scr.title.length>6 ? scr.title.substr(0, 5).concat('..') : scr.title, \r\n          //tabBarIcon: ({ tintColor }) => <Icon name=\"list\" size={35} color={tintColor} />\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    screens[0] = {\r\n      screen: props => <ErrorPage msg=\"No data record found\" />,\r\n      navigationOptions: {\r\n        tabBarLabel: \"Fatal error occurred\"\r\n      }\r\n    }\r\n  }\r\n  return screens;  \r\n}\r\n\r\n\r\nNavTabs.router = SectionPage.router;\r\n"]},"metadata":{},"sourceType":"module"}