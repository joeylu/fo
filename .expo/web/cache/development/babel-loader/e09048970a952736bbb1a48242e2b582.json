{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\book\\\\tabbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar HomePage = function (_Component) {\n  _inherits(HomePage, _Component);\n\n  var _super = _createSuper(HomePage);\n\n  function HomePage() {\n    _classCallCheck(this, HomePage);\n\n    return _super.apply(this, arguments);\n  }\n\n  return HomePage;\n}(Component);\n\nexport { HomePage as default };\n\nfunction TabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation,\n      position = _ref.position;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var inputRange = state.routes.map(function (_, i) {\n      return i;\n    });\n    var opacity = Animated.interpolate(position, {\n      inputRange: inputRange,\n      outputRange: inputRange.map(function (i) {\n        return i === index ? 1 : 0;\n      })\n    });\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? ['selected'] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.Text, {\n      style: {\n        opacity: opacity\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, label));\n  }));\n}","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/book/tabbar.js"],"names":["HomePage","Component","TabBar","state","descriptors","navigation","position","flexDirection","paddingTop","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","inputRange","_","i","opacity","Animated","interpolate","outputRange","tabBarAccessibilityLabel","tabBarTestID","flex"],"mappings":";;;;;;;;;;IAAqBA,Q;;;;;;;;;;;;EAAiBC,S;;SAAjBD,Q;;AAKrB,SAASE,MAAT,OAA8D;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAArCC,WAAqC,QAArCA,WAAqC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC1D,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE;AAApC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,QAC1BC,OAD0B,GACdT,WAAW,CAACO,KAAK,CAACG,GAAP,CADG,CAC1BD,OAD0B;AAElC,QAAME,KAAK,GACTF,OAAO,CAACG,WAAR,KAAwBC,SAAxB,GACIJ,OAAO,CAACG,WADZ,GAEIH,OAAO,CAACK,KAAR,KAAkBD,SAAlB,GACAJ,OAAO,CAACK,KADR,GAEAP,KAAK,CAACQ,IALZ;AAOA,QAAMC,SAAS,GAAGjB,KAAK,CAACS,KAAN,KAAgBA,KAAlC;;AAEA,QAAMS,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,UAAMC,KAAK,GAAGjB,UAAU,CAACkB,IAAX,CAAgB;AAC5BC,QAAAA,IAAI,EAAE,UADsB;AAE5BC,QAAAA,MAAM,EAAEd,KAAK,CAACG;AAFc,OAAhB,CAAd;;AAKA,UAAI,CAACM,SAAD,IAAc,CAACE,KAAK,CAACI,gBAAzB,EAA2C;AACzCrB,QAAAA,UAAU,CAACsB,QAAX,CAAoBhB,KAAK,CAACQ,IAA1B;AACD;AACF,KATD;;AAWA,QAAMS,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBvB,MAAAA,UAAU,CAACkB,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAE,cADQ;AAEdC,QAAAA,MAAM,EAAEd,KAAK,CAACG;AAFA,OAAhB;AAID,KALD;;AAOA,QAAMe,UAAU,GAAG1B,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiB,UAACoB,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAV;AAAA,KAAjB,CAAnB;AACA,QAAMC,OAAO,GAAGC,QAAQ,CAACC,WAAT,CAAqB5B,QAArB,EAA+B;AAC7CuB,MAAAA,UAAU,EAAVA,UAD6C;AAE7CM,MAAAA,WAAW,EAAEN,UAAU,CAACnB,GAAX,CAAe,UAAAqB,CAAC;AAAA,eAAKA,CAAC,KAAKnB,KAAN,GAAc,CAAd,GAAkB,CAAvB;AAAA,OAAhB;AAFgC,KAA/B,CAAhB;AAKA,WACE,oBAAC,gBAAD;AACE,MAAA,iBAAiB,EAAC,QADpB;AAEE,MAAA,mBAAmB,EAAEQ,SAAS,GAAG,CAAC,UAAD,CAAH,GAAkB,EAFlD;AAGE,MAAA,kBAAkB,EAAEP,OAAO,CAACuB,wBAH9B;AAIE,MAAA,MAAM,EAAEvB,OAAO,CAACwB,YAJlB;AAKE,MAAA,OAAO,EAAEhB,OALX;AAME,MAAA,WAAW,EAAEO,WANf;AAOE,MAAA,KAAK,EAAE;AAAEU,QAAAA,IAAI,EAAE;AAAR,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE;AAAEN,QAAAA,OAAO,EAAPA;AAAF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCjB,KAApC,CATF,CADF;AAaD,GAhDA,CADH,CADF;AAqDD","sourcesContent":["export default class HomePage extends Component {      \r\n\r\n    \r\n}\r\n\r\nfunction TabBar({ state, descriptors, navigation, position }) {\r\n    return (\r\n      <View style={{ flexDirection: 'row', paddingTop: 20 }}>\r\n        {state.routes.map((route, index) => {\r\n          const { options } = descriptors[route.key];\r\n          const label =\r\n            options.tabBarLabel !== undefined\r\n              ? options.tabBarLabel\r\n              : options.title !== undefined\r\n              ? options.title\r\n              : route.name;\r\n  \r\n          const isFocused = state.index === index;\r\n  \r\n          const onPress = () => {\r\n            const event = navigation.emit({\r\n              type: 'tabPress',\r\n              target: route.key,\r\n            });\r\n  \r\n            if (!isFocused && !event.defaultPrevented) {\r\n              navigation.navigate(route.name);\r\n            }\r\n          };\r\n  \r\n          const onLongPress = () => {\r\n            navigation.emit({\r\n              type: 'tabLongPress',\r\n              target: route.key,\r\n            });\r\n          };\r\n          // modify inputRange for custom behavior\r\n          const inputRange = state.routes.map((_, i) => i);\r\n          const opacity = Animated.interpolate(position, {\r\n            inputRange,\r\n            outputRange: inputRange.map(i => (i === index ? 1 : 0)),\r\n          });\r\n  \r\n          return (\r\n            <TouchableOpacity\r\n              accessibilityRole=\"button\"\r\n              accessibilityStates={isFocused ? ['selected'] : []}\r\n              accessibilityLabel={options.tabBarAccessibilityLabel}\r\n              testID={options.tabBarTestID}\r\n              onPress={onPress}\r\n              onLongPress={onLongPress}\r\n              style={{ flex: 1 }}\r\n            >\r\n              <Animated.Text style={{ opacity }}>{label}</Animated.Text>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}