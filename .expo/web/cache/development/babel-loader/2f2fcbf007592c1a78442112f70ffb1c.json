{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo-github\\\\app\\\\layout\\\\media.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"../content/css/styles\";\nimport CircularProgress from \"./progress\";\nimport DownloadBtn from \"./download\";\nimport AudioBtn from \"./audio\";\nimport { GetFileInfo } from \"../utilities/files\";\n\nvar Media = function (_Component) {\n  _inherits(Media, _Component);\n\n  var _super = _createSuper(Media);\n\n  function Media(props) {\n    var _this;\n\n    _classCallCheck(this, Media);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      mediaExist: false\n    };\n    _this.updateMediaExistState = _this.updateMediaExistState.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Media, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.media !== \"undefined\" && this.props.media !== \"\") {\n        GetFileInfo(this.props.media).then(function (result) {\n          console.log(\"media check: \" + _this2.props.media + \" > \" + result.exists);\n\n          _this2.setState({\n            mediaExist: result.exists\n          });\n        }).catch(function (error) {\n          console.log(\"media check: \" + error);\n        });\n      }\n    }\n  }, {\n    key: \"updateMediaExistState\",\n    value: function updateMediaExistState(exist) {\n      this.setState({\n        mediaExist: exist\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var media = this.props.media;\n\n      if (media !== \"\") {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }\n        }, React.createElement(AudioBtn, {\n          media: media,\n          title: this.props.title,\n          exist: this.state.mediaExist,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }\n        }), React.createElement(DownloadBtn, {\n          media: media,\n          menu: this.props.menu,\n          book: this.props.book,\n          title: this.props.title,\n          mediaExist: this.state.mediaExist,\n          updateMediaExist: this.updateMediaExistState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return Media;\n}(Component);\n\nexport { Media as default };","map":{"version":3,"sources":["C:/sites/fo-github/app/layout/media.js"],"names":["React","Component","styles","CircularProgress","DownloadBtn","AudioBtn","GetFileInfo","Media","props","state","mediaExist","updateMediaExistState","bind","media","then","result","console","log","exists","setState","catch","error","exist","flexDirection","title","menu","book"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,SAASC,WAAT;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,+BAA7B;AAHiB;AAIlB;;;;wCACmB;AAAA;;AAClB,UAAI,KAAKJ,KAAL,CAAWK,KAAX,KAAqB,WAArB,IAAoC,KAAKL,KAAL,CAAWK,KAAX,KAAqB,EAA7D,EAAiE;AAC/DP,QAAAA,WAAW,CAAC,KAAKE,KAAL,CAAWK,KAAZ,CAAX,CACCC,IADD,CACM,UAAAC,MAAM,EAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,MAAI,CAACT,KAAL,CAAWK,KAA7B,GAAqC,KAArC,GAA6CE,MAAM,CAACG,MAAhE;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACT,YAAAA,UAAU,EAAEK,MAAM,CAACG;AAApB,WAAd;AACD,SAJD,EAKCE,KALD,CAKO,UAAAC,KAAK,EAAI;AACdL,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBI,KAA9B;AACD,SAPD;AAQD;AACF;;;0CAEqBC,K,EAAO;AAE3B,WAAKH,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAEY;AAAb,OAAd;AACD;;;6BAEQ;AACP,UAAMT,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAzB;;AAEA,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACU,YAAAA,aAAa,EAAE;AAAhB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AACE,UAAA,KAAK,EAAEV,KADT;AAEE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWgB,KAFpB;AAGE,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,oBAAC,WAAD;AACE,UAAA,KAAK,EAAEG,KADT;AAEE,UAAA,IAAI,EAAE,KAAKL,KAAL,CAAWiB,IAFnB;AAGE,UAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWkB,IAHnB;AAIE,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWgB,KAJpB;AAKE,UAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,UALzB;AAME,UAAA,gBAAgB,EAAE,KAAKC,qBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF;AAiBD,OAlBD,MAkBO;AAEL,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;;;EAjDgCV,S;;SAAdM,K","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text, TouchableOpacity, Alert } from \"react-native\";\r\nimport styles from \"../content/css/styles\";\r\nimport CircularProgress from \"./progress\";\r\nimport DownloadBtn from \"./download\";\r\nimport AudioBtn from \"./audio\";\r\nimport { GetFileInfo } from \"../utilities/files\";\r\n\r\nexport default class Media extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {mediaExist: false};\r\n    this.updateMediaExistState = this.updateMediaExistState.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.media !== \"undefined\" && this.props.media !== \"\") {\r\n      GetFileInfo(this.props.media)\r\n      .then(result => {\r\n        console.log(\"media check: \" + this.props.media + \" > \" + result.exists);     \r\n        this.setState({mediaExist: result.exists});\r\n      })\r\n      .catch(error => {\r\n        console.log(\"media check: \" + error);\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMediaExistState(exist) {\r\n    //console.log(\"handler: \" + exist);\r\n    this.setState({mediaExist: exist});\r\n  }\r\n\r\n  render() {    \r\n    const media = this.props.media;\r\n    //firstly, check if is has a media file\r\n    if (media !== \"\") {\r\n      return (\r\n        <View style={{flexDirection: 'row'}}>\r\n          <AudioBtn \r\n            media={media} \r\n            title={this.props.title} \r\n            exist={this.state.mediaExist}\r\n          />\r\n          <DownloadBtn\r\n            media={media}\r\n            menu={this.props.menu}\r\n            book={this.props.book}\r\n            title={this.props.title}\r\n            mediaExist={this.state.mediaExist}\r\n            updateMediaExist={this.updateMediaExistState}\r\n          />\r\n        </View>\r\n      );\r\n    } else {\r\n      //if media is empty, show nothing\r\n      return <View></View>;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}