{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\layout\\\\content.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Listitem from \"./list\";\nimport Detail from \"./detail\";\nimport foData from \"../content/data.json\";\nimport foMenu from \"../content/menu.json\";\n\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n\n  var _super = _createSuper(Content);\n\n  function Content() {\n    _classCallCheck(this, Content);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Content, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var section = this.props.menu == true ? foMenu.find(function (item) {\n        return item.id == _this.props.section;\n      }) : foData.find(function (item) {\n        return item.id == _this.section;\n      });\n      this.list = section.list;\n\n      if (this.list.length == 0) {\n        React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 9\n          }\n        }, React.createElement(ScrollView, {\n          contentContainerStyle: styles.contentContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }\n        }, React.createElement(Listitem, {\n          source: this.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }\n        }, React.createElement(ScrollView, {\n          contentContainerStyle: styles.contentContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }\n        }, React.createElement(Listitem, {\n          source: this.list,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nexport { Content as default };\nvar styles = StyleSheet.create({\n  contentContainer: {\n    paddingVertical: 20\n  }\n});","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/layout/content.js"],"names":["React","Component","Listitem","Detail","foData","foMenu","Content","section","props","menu","find","item","id","list","length","styles","contentContainer","StyleSheet","create","paddingVertical"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;;IAEqBC,O;;;;;;;;;;;;;6BACX;AAAA;;AACN,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,IAAX,IAAmB,IAAnB,GAA0BJ,MAAM,CAACK,IAAP,CAAY,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,IAAW,KAAI,CAACJ,KAAL,CAAWD,OAA1B;AAAA,OAAhB,CAA1B,GAA+EH,MAAM,CAACM,IAAP,CAAY,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,IAAW,KAAI,CAACL,OAApB;AAAA,OAAhB,CAA/F;AACA,WAAKM,IAAL,GAAYN,OAAO,CAACM,IAApB;;AACA,UAAI,KAAKA,IAAL,CAAUC,MAAV,IAAoB,CAAxB,EAA2B;AAEvB,4BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,UAAD;AAAY,UAAA,qBAAqB,EAAEC,MAAM,CAACC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAE,KAAKH,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADA;AAKH,OAPD,MAOO;AAEL,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,qBAAqB,EAAEE,MAAM,CAACC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAE,KAAKH,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;AAOD;AACF;;;;EArBkCZ,S;;SAAhBK,O;AAwBrB,IAAMS,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,gBAAgB,EAAE;AAChBG,IAAAA,eAAe,EAAE;AADD;AADa,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, ScrollView, Text, StyleSheet } from 'react-native';\r\nimport Listitem from \"./list\";\r\nimport Detail from \"./detail\";\r\nimport foData from \"../content/data.json\";\r\nimport foMenu from \"../content/menu.json\";\r\n\r\nexport default class Content extends Component {    \r\n  render(){    \r\n    const section = this.props.menu == true ? foMenu.find(item => item.id == this.props.section) : foData.find(item => item.id == this.section);\r\n    this.list = section.list;\r\n    if (this.list.length == 0) {\r\n      //return page content\r\n        <View>\r\n        <ScrollView contentContainerStyle={styles.contentContainer}>\r\n          <Listitem source={this.list} />\r\n        </ScrollView>\r\n      </View>\r\n    } else {\r\n      //return list\r\n      return (      \r\n        <View>\r\n          <ScrollView contentContainerStyle={styles.contentContainer}>\r\n            <Listitem source={this.list} />\r\n          </ScrollView>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    paddingVertical: 20\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}