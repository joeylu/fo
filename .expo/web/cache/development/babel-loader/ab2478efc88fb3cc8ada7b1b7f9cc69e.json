{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\book\\\\options.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Popover, { PopoverTouchable } from 'react-native-modal-popover';\nimport { List, ListItem } from 'react-native-elements';\nimport Sound from 'react-native-sound';\nimport RNFetchBlob from 'rn-fetch-blob';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport foData from \"../content/data.json\";\nvar dirs = RNFetchBlob.fs.dirs;\nSound.setCategory('Playback');\n\nfunction initNewSound() {\n  if (global.preload.sound == null) {\n    global.preload.sound = new Sound(global.preload.media, dirs.MusicDir + \"/fo\", function (error) {\n      if (error) {\n        console.log('failed to load the sound', error);\n        return;\n      }\n\n      console.log('duration in seconds: ' + global.preload.sound.getDuration() + 'number of channels: ' + global.preload.sound.getNumberOfChannels());\n    });\n  }\n}\n\nvar IconPlayer = function (_Component) {\n  _inherits(IconPlayer, _Component);\n\n  var _super = _createSuper(IconPlayer);\n\n  function IconPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, IconPlayer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sound: props.songInfo\n    };\n\n    if (global.song.media != props.songInfo.media) {\n      initNewSound();\n    }\n\n    return _this;\n  }\n\n  _createClass(IconPlayer, [{\n    key: \"playNewSound\",\n    value: function playNewSound() {\n      if (global.preload.sound.isLoaded()) {\n        global.song = global.preload;\n        global.song.status = 1;\n        this.props.songHandler(global.song);\n        this.updateFrame();\n        global.song.sound.play(function (success) {\n          if (success) {} else {\n            alert('无法加载音乐，请尝试重新下载: (1000)');\n            global.song.sound.release();\n          }\n        });\n      } else {\n        alert('无法加载音乐，请尝试重新下载: (10)');\n      }\n    }\n  }, {\n    key: \"pauseSong\",\n    value: function pauseSong() {\n      global.song.status = 2;\n      global.song.sound.pause();\n      this.props.songHandler(global.song);\n      this.updateFrame();\n    }\n  }, {\n    key: \"resumeSong\",\n    value: function resumeSong() {\n      global.song.status = 1;\n      global.song.sound.play();\n      this.props.songHandler(global.song);\n      this.updateFrame();\n    }\n  }, {\n    key: \"stopSong\",\n    value: function stopSong() {\n      global.song.sound.stop(function () {\n        global.song.sound.release();\n      });\n      global.song.status = 0;\n      this.props.songHandler(global.song);\n    }\n  }, {\n    key: \"updateFrame\",\n    value: function updateFrame() {\n      var _this2 = this;\n\n      clearInterval(global.song.intervalID);\n      global.song.intervalID = setInterval(function () {\n        var time = new Date();\n        console.log(time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds() + \" -- \" + song.intervalID);\n\n        if (global.song.status == 1 && global.song.sound.isLoaded()) {\n          global.song.sound.getCurrentTime(function (second) {\n            var playbackFrame = parseInt(second / global.song.sound.getDuration() * 100);\n\n            if (playbackFrame > global.song.frame) {\n              global.song.frame = playbackFrame;\n\n              _this2.props.songHandler(global.song);\n\n              console.log(second + \" // \" + global.song.frame);\n            }\n          });\n        }\n\n        if (global.song.frame > 100 || global.song.status != 1 || !global.song.sound.isLoaded()) {\n          clearInterval(global.song.intervalID);\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.sound.status == 3) {\n        return React.createElement(ListItem, {\n          key: 0,\n          hideChevron: true,\n          title: \"\\u5C1A\\u672A\\u7F13\\u5B58\",\n          leftIcon: React.createElement(Icon, {\n            name: \"exclamation-triangle\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        });\n      } else if (this.state.sound.status == 2) {\n        return React.createElement(ListItem, {\n          key: 0,\n          hideChevron: true,\n          title: \"\\u7EE7\\u7EED\\u64AD\\u653E\",\n          onPress: function onPress() {\n            return _this3.playSound();\n          },\n          leftIcon: React.createElement(Icon, {\n            name: \"play-circle-o\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }\n        });\n      } else if (this.state.sound.status == 1) {\n        return React.createElement(ListItem, {\n          key: 0,\n          hideChevron: true,\n          title: \"\\u6682\\u505C\\u64AD\\u653E\",\n          onPress: function onPress() {\n            return _this3.pauseSong();\n          },\n          leftIcon: React.createElement(Icon, {\n            name: \"pause\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }\n          }),\n          title: React.createElement(View, {\n            style: {\n              flex: 1,\n              height: 20,\n              position: 'relative'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            style: {\n              position: 'relative',\n              zIndex: 2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }\n          }, \"\\u6682\\u505C\\u64AD\\u653E\"), React.createElement(View, {\n            style: {\n              width: this.state.sound.frame.toString() + '%',\n              height: \"100%\",\n              backgroundColor: '#ddd',\n              position: 'absolute',\n              zIndex: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(ListItem, {\n          key: 0,\n          hideChevron: true,\n          title: \"\\u64AD\\u653E\\u97F3\\u4E50\",\n          onPress: function onPress() {\n            return _this3.playNewSound();\n          },\n          leftIcon: React.createElement(Icon, {\n            name: \"play\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }]);\n\n  return IconPlayer;\n}(Component);\n\nvar Download = function (_Component2) {\n  _inherits(Download, _Component2);\n\n  var _super2 = _createSuper(Download);\n\n  function Download(props) {\n    var _this4;\n\n    _classCallCheck(this, Download);\n\n    _this4 = _super2.call(this, props);\n    _this4.state = {\n      sound: props.downloadInfo\n    };\n    return _this4;\n  }\n\n  _createClass(Download, [{\n    key: \"downloadSound\",\n    value: function downloadSound() {\n      var _this5 = this;\n\n      global.preload.status = 3, global.preload.download = 0;\n      global.preload.sound = null;\n      this.props.fileHandler(global.preload);\n      RNFetchBlob.config({\n        path: dirs.MusicDir + '/fo/' + global.preload.media\n      }).fetch('GET', 'http://www.halagame.com/fo/' + global.preload.media, {}).progress({\n        count: 10\n      }, function (received, total) {\n        var progressingValue = parseInt(received / total * 100);\n        global.preload.download = 1;\n        global.preload.progress = progressingValue;\n\n        _this5.props.fileHandler(global.preload);\n      }).then(function (res) {\n        global.preload.status = 0;\n        global.preload.download = 2;\n        global.preload.progress = 100;\n        initSound();\n\n        _this5.props.fileHandler(global.preload);\n      }).catch(function (errorMessage, statusCode) {\n        global.preload.status = 3;\n        global.preload.download = 0;\n        global.preload.progress = 0;\n\n        _this5.props.fileHandler(global.preload);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      if (this.state.sound.download == 2) {\n        return React.createElement(ListItem, {\n          key: 1,\n          hideChevron: true,\n          onPress: function onPress() {\n            return _this6.downloadSound();\n          },\n          title: \"\\u91CD\\u65B0\\u4E0B\\u8F7D\",\n          leftIcon: React.createElement(Icon, {\n            name: \"check\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        });\n      } else if (this.state.sound.download == 1) {\n        return React.createElement(ListItem, {\n          key: 1,\n          hideChevron: true,\n          leftIcon: React.createElement(Icon, {\n            name: \"spinner\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 22\n            }\n          }),\n          title: React.createElement(View, {\n            style: {\n              flex: 1,\n              height: 20,\n              position: 'relative'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            style: {\n              position: 'relative',\n              zIndex: 2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }\n          }, \"\\u4E0B\\u8F7D\\u4E2D..\"), React.createElement(View, {\n            width: true,\n            style: {\n              width: this.state.sound.progress.toString() + '%',\n              height: \"100%\",\n              backgroundColor: '#ddd',\n              position: 'absolute',\n              zIndex: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(ListItem, {\n          key: 1,\n          hideChevron: true,\n          onPress: function onPress() {\n            return _this6.downloadSound();\n          },\n          title: \"\\u7F13\\u5B58\\u97F3\\u4E50\",\n          leftIcon: React.createElement(Icon, {\n            name: \"download\",\n            style: styles.icons,\n            size: 20,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }]);\n\n  return Download;\n}(Component);\n\nvar OptionsPopover = function (_Component3) {\n  _inherits(OptionsPopover, _Component3);\n\n  var _super3 = _createSuper(OptionsPopover);\n\n  function OptionsPopover(props) {\n    var _this7;\n\n    _classCallCheck(this, OptionsPopover);\n\n    _this7 = _super3.call(this, props);\n    global.preload = {\n      status: 3,\n      media: \"\",\n      download: 0,\n      progress: 0,\n      sound: null,\n      frame: 0,\n      intervalID: 0\n    };\n\n    if (global.song.media != _this7.props.media) {\n      global.preload.media = _this7.props.media;\n    } else {\n      global.preload = global.song;\n    }\n\n    _this7.state = {\n      sound: global.preload\n    };\n    _this7.updateSong = _this7.setSoundState.bind(_assertThisInitialized(_this7));\n    return _this7;\n  }\n\n  _createClass(OptionsPopover, [{\n    key: \"doFileCheck\",\n    value: function doFileCheck() {\n      var _this8 = this;\n\n      var fileName = global.preload.media;\n      RNFetchBlob.fs.exists(dirs.MusicDir + \"/fo/\" + fileName).then(function (exist) {\n        if (exist && global.preload.status != 1) {\n          global.preload = {\n            status: 0,\n            media: fileName,\n            download: 2,\n            progress: 100,\n            frame: 0,\n            intervalID: 0\n          };\n\n          _this8.setSoundState(global.preload);\n        } else if (!exist) {\n          global.preload = {\n            status: 3,\n            media: fileName,\n            download: 0,\n            progress: 0,\n            frame: 0,\n            intervalID: 0\n          };\n\n          _this8.setSoundState(global.preload);\n        }\n      }).catch(function () {});\n    }\n  }, {\n    key: \"setSoundState\",\n    value: function setSoundState(songInfo) {\n      this.setState({\n        sound: songInfo\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.doFileCheck();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var OptionList = function OptionList() {\n        if (_this9.state.sound.media) {\n          return React.createElement(List, {\n            containerStyle: {\n              marginBottom: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 11\n            }\n          }, React.createElement(IconPlayer, {\n            songInfo: _this9.state.sound,\n            songHandler: _this9.updateSong.bind(_this9),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }\n          }), React.createElement(Download, {\n            downloadInfo: _this9.state.sound,\n            fileHandler: _this9.updateSong.bind(_this9),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }\n          }), React.createElement(ListItem, {\n            key: 99,\n            hideChevron: true,\n            titleStyle: {\n              color: '#ccc'\n            },\n            title: \"\\u8BBE\\u7F6E\",\n            leftIcon: React.createElement(Icon, {\n              name: \"cog\",\n              style: styles.iconsDisabled,\n              size: 20,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 25\n              }\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }\n          }));\n        } else {\n          return React.createElement(List, {\n            containerStyle: {\n              marginBottom: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 11\n            }\n          }, React.createElement(ListItem, {\n            key: 99,\n            hideChevron: true,\n            titleStyle: {\n              color: '#ccc'\n            },\n            title: \"\\u8BBE\\u7F6E\",\n            leftIcon: React.createElement(Icon, {\n              name: \"cog\",\n              style: styles.iconsDisabled,\n              size: 20,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 25\n              }\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }\n          }));\n        }\n      };\n\n      return React.createElement(PopoverTouchable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon.Button, {\n        name: \"bars\",\n        backgroundColor: \"transparent\",\n        color: \"#1a1a1a\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }), React.createElement(Popover, {\n        contentStyle: styles.content,\n        arrowStyle: styles.arrow,\n        backgroundStyle: styles.background,\n        placement: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }, React.createElement(OptionList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return OptionsPopover;\n}(Component);\n\nexport { OptionsPopover as default };\nvar styles = StyleSheet.create({\n  content: {\n    padding: 16,\n    backgroundColor: '#fcfcfc',\n    borderRadius: 8\n  },\n  arrow: {\n    borderTopColor: '#fcfcfc'\n  },\n  icons: {\n    marginRight: 15\n  },\n  iconsDisabled: {\n    marginRight: 15,\n    color: '#ccc'\n  }\n});","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/book/options.js"],"names":["React","Component","Popover","PopoverTouchable","List","ListItem","Sound","RNFetchBlob","Icon","foData","dirs","fs","setCategory","initNewSound","global","preload","sound","media","MusicDir","error","console","log","getDuration","getNumberOfChannels","IconPlayer","props","state","songInfo","song","isLoaded","status","songHandler","updateFrame","play","success","alert","release","pause","stop","clearInterval","intervalID","setInterval","time","Date","getHours","getMinutes","getSeconds","getCurrentTime","second","playbackFrame","parseInt","frame","styles","icons","playSound","pauseSong","flex","height","position","zIndex","width","toString","backgroundColor","playNewSound","Download","downloadInfo","download","fileHandler","config","path","fetch","progress","count","received","total","progressingValue","then","res","initSound","catch","errorMessage","statusCode","downloadSound","OptionsPopover","updateSong","setSoundState","bind","fileName","exists","exist","setState","doFileCheck","OptionList","marginBottom","color","iconsDisabled","content","arrow","background","StyleSheet","create","padding","borderRadius","borderTopColor","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, StyleSheet, Text, View, ActivityIndicator } from 'react-native';\r\nimport Popover, { PopoverTouchable } from 'react-native-modal-popover';\r\nimport { List, ListItem } from 'react-native-elements'\r\nimport Sound from 'react-native-sound';\r\nimport RNFetchBlob from 'rn-fetch-blob'\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport foData from '../content/data.json';\r\n//init directory\r\nconst dirs = RNFetchBlob.fs.dirs;\r\n// Enable playback in silence mode\r\nSound.setCategory('Playback');\r\n//init react native sound\r\nfunction initNewSound(){\r\n  //console.log(JSON.stringify(song));\r\n  if (global.preload.sound == null) {    \r\n    global.preload.sound = new Sound(global.preload.media, dirs.MusicDir + \"/fo\", (error) => {\r\n      if (error) {\r\n        console.log('failed to load the sound', error);\r\n        return;\r\n      }\r\n      // loaded successfully\r\n      // Loop indefinitely until stop() is called\r\n      //sound.setNumberOfLoops(-1);\r\n      console.log('duration in seconds: ' + global.preload.sound.getDuration() + 'number of channels: ' + global.preload.sound.getNumberOfChannels());\r\n    });\r\n  }\r\n}\r\n\r\nclass IconPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {sound: props.songInfo};\r\n    if (global.song.media != props.songInfo.media) {\r\n      initNewSound();\r\n    }\r\n  }\r\n  playNewSound() { //when new play is pressed\r\n    //console.log(global.preload.sound.isLoaded());\r\n    if (global.preload.sound.isLoaded()) { //make sure the new sound is initiated\r\n      global.song = global.preload;\r\n      global.song.status = 1;\r\n      this.props.songHandler(global.song);\r\n      this.updateFrame();\r\n      global.song.sound.play((success) => {\r\n        if (success) {\r\n          //something when finish playing\r\n        } else {\r\n          alert('无法加载音乐，请尝试重新下载: (1000)');\r\n          global.song.sound.release();\r\n        }\r\n      }); \r\n    } else {\r\n      alert('无法加载音乐，请尝试重新下载: (10)');\r\n    }\r\n  }\r\n  pauseSong(){\r\n    global.song.status = 2;\r\n    global.song.sound.pause();\r\n    this.props.songHandler(global.song);\r\n    this.updateFrame();\r\n  }\r\n  resumeSong(){\r\n    global.song.status = 1;\r\n    global.song.sound.play(); //resume() is not there yet\r\n    this.props.songHandler(global.song);\r\n    this.updateFrame();\r\n  }\r\n  stopSong(){\r\n    global.song.sound.stop(() => {\r\n      global.song.sound.release();\r\n    });\r\n    global.song.status = 0;\r\n    this.props.songHandler(global.song);\r\n  }\r\n  updateFrame(){\r\n    clearInterval(global.song.intervalID);    \r\n    global.song.intervalID = setInterval(()=>{\r\n      let time = new Date();\r\n      console.log(time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds() + \" -- \" + song.intervalID);      \r\n      if (global.song.status == 1 && global.song.sound.isLoaded()){\r\n        global.song.sound.getCurrentTime((second)=> { \r\n          let playbackFrame = parseInt((second / global.song.sound.getDuration()) * 100);\r\n          if (playbackFrame > global.song.frame) {\r\n            global.song.frame = playbackFrame;\r\n            this.props.songHandler(global.song);\r\n            console.log(second + \" // \" + global.song.frame);\r\n          }\r\n        });\r\n      }    \r\n      if(global.song.frame > 100 || global.song.status != 1 || !global.song.sound.isLoaded()) {\r\n        clearInterval(global.song.intervalID);\r\n      }\r\n    }, 1000)\r\n  }\r\n  render() {\r\n    if (this.state.sound.status == 3) {    \r\n      return (\r\n        <ListItem key={0} hideChevron={true} title=\"尚未缓存\"\r\n          leftIcon={<Icon name=\"exclamation-triangle\" style={styles.icons} size={20} ></Icon>} />\r\n      )  \r\n    } else if (this.state.sound.status == 2) {    \r\n      return (\r\n        <ListItem key={0} hideChevron={true} title=\"继续播放\" onPress={() => {return this.playSound();}}\r\n          leftIcon={<Icon name=\"play-circle-o\" style={styles.icons} size={20} ></Icon>} />\r\n      )  \r\n    } else if (this.state.sound.status == 1) {    \r\n      return (\r\n        <ListItem key={0} hideChevron={true} title=\"暂停播放\" onPress={() => {return this.pauseSong();}}\r\n          leftIcon={<Icon name=\"pause\" style={styles.icons} size={20} ></Icon>}          \r\n          title={\r\n            <View style={{flex: 1, height:20, position: 'relative'}}>\r\n              <Text style={{position: 'relative', zIndex:2}}>暂停播放</Text>\r\n              <View style={{width: this.state.sound.frame.toString() + '%', height:\"100%\", backgroundColor:'#ddd', position: 'absolute',zIndex:1}}></View>\r\n            </View>\r\n          } />\r\n      )\r\n    } else {            \r\n      return (              \r\n        <ListItem key={0} hideChevron={true} title=\"播放音乐\" onPress={() => {return this.playNewSound();}}\r\n          leftIcon={<Icon name=\"play\" style={styles.icons} size={20} ></Icon>} />\r\n      )\r\n    }\r\n  }\r\n}\r\nclass Download extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {sound: props.downloadInfo};    \r\n  }\r\n  downloadSound(){\r\n    global.preload.status = 3, global.preload.download = 0; global.preload.sound = null;\r\n    this.props.fileHandler(global.preload);\r\n    RNFetchBlob.config({\r\n      path : dirs.MusicDir + '/fo/' + global.preload.media\r\n    }).fetch('GET', 'http://www.halagame.com/fo/' + global.preload.media, {\r\n      //some headers ..    \r\n    }).progress({ count : 10 }, (received, total) => {\r\n      let progressingValue = parseInt((received / total) * 100);\r\n      global.preload.download = 1; global.preload.progress = progressingValue;\r\n      this.props.fileHandler(global.preload);\r\n      //console.log('progress', progressingValue)    \r\n    }).then((res) => {    \r\n      global.preload.status = 0; global.preload.download = 2; global.preload.progress = 100;       \r\n      initSound(); //set song.sound\r\n      this.props.fileHandler(global.preload);\r\n      //console.log('downloaded: ' + JSON.stringify(res));\r\n    }).catch((errorMessage, statusCode)=>{     \r\n      global.preload.status = 3; global.preload.download = 0; global.preload.progress = 0;\r\n      this.props.fileHandler(global.preload);\r\n      //console.log('failed: ' + errorMessage);\r\n    })\r\n  }\r\n  render() {\r\n    if (this.state.sound.download == 2) {\r\n      return (                \r\n        <ListItem key={1} hideChevron={true} onPress={() => {return this.downloadSound();}} title=\"重新下载\" \r\n          leftIcon={<Icon name=\"check\" style={styles.icons} size={20} ></Icon>} />\r\n      )\r\n    } else if (this.state.sound.download == 1) {\r\n      return (               \r\n        <ListItem key={1} hideChevron={true} \r\n          leftIcon={ <Icon name=\"spinner\" style={styles.icons} size={20} ></Icon> }\r\n          title={\r\n            <View style={{flex: 1, height:20, position: 'relative'}}>\r\n              <Text style={{position: 'relative', zIndex:2}}>下载中..</Text>\r\n              <View width style={{width: this.state.sound.progress.toString() + '%', height:\"100%\", backgroundColor:'#ddd', position: 'absolute',zIndex:1}}></View>\r\n            </View>\r\n          }\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <ListItem key={1} hideChevron={true} onPress={() => {return this.downloadSound();}} title=\"缓存音乐\"\r\n          leftIcon={<Icon name=\"download\" style={styles.icons} size={20} ></Icon>} />\r\n      )\r\n    }\r\n  }  \r\n}\r\n\r\nexport default class OptionsPopover extends Component {  \r\n  constructor(props) {\r\n    super(props);    \r\n    global.preload = {status: 3, media: \"\", download: 0, progress: 0, sound: null, frame: 0, intervalID: 0}; //always reset preload\r\n    if (global.song.media != this.props.media) { //when new book is opened, create a new preload media file\r\n      global.preload.media = this.props.media;\r\n    } else { //when same book or both has no media, use global song\r\n      global.preload = global.song;\r\n    }\r\n    this.state = {sound:global.preload};\r\n    this.updateSong = this.setSoundState.bind(this);\r\n    //console.log(JSON.stringify(this.state.sound));\r\n  }    \r\n  doFileCheck() {  \r\n    let fileName = global.preload.media;\r\n    RNFetchBlob.fs.exists(dirs.MusicDir + \"/fo/\" + fileName).then((exist) => {\r\n      //console.log(\"file is: \" + exist + \" -- status: \" + global.preload.status);\r\n      if (exist && global.preload.status != 1) { //has file, set to default playable\r\n        global.preload = {status: 0, media: fileName, download: 2, progress: 100, frame: 0,intervalID: 0 };\r\n        this.setSoundState(global.preload);\r\n      } else if (!exist) { //no file, set to default downloadable\r\n        global.preload = {status: 3, media: fileName, download: 0, progress: 0, frame: 0,intervalID: 0 };\r\n        this.setSoundState(global.preload);\r\n      }\r\n    }).catch(() => { \r\n      //log error\r\n    })\r\n  }\r\n  setSoundState(songInfo) { \r\n    this.setState({ sound: songInfo });\r\n  }\r\n  componentDidMount() {\r\n    //console.log(\"start checking\");\r\n    this.doFileCheck();\r\n  }\r\n  render(){           \r\n    const OptionList = ()=>{\r\n      if (this.state.sound.media) {        \r\n        return (\r\n          <List containerStyle={{marginBottom: 20}}>          \r\n            <IconPlayer songInfo={this.state.sound} songHandler = {this.updateSong.bind(this)} />            \r\n            <Download downloadInfo={this.state.sound} fileHandler = {this.updateSong.bind(this)} />\r\n            <ListItem key={99} hideChevron={true} titleStyle={{color: '#ccc'}} title=\"设置\" \r\n              leftIcon={<Icon name=\"cog\" style={styles.iconsDisabled} size={20} ></Icon>} />\r\n          </List>\r\n        )\r\n      } else {           \r\n        return (\r\n          <List containerStyle={{marginBottom: 20}}>          \r\n            <ListItem key={99} hideChevron={true} titleStyle={{color: '#ccc'}} title=\"设置\" \r\n              leftIcon={<Icon name=\"cog\" style={styles.iconsDisabled} size={20} ></Icon>} />\r\n          </List>\r\n        )     \r\n      }\r\n    }\r\n    return (    \r\n      <PopoverTouchable>\r\n        <Icon.Button name=\"bars\" backgroundColor=\"transparent\" color=\"#1a1a1a\" size={30} />\r\n        <Popover\r\n          contentStyle={styles.content}\r\n          arrowStyle={styles.arrow}\r\n          backgroundStyle={styles.background}\r\n          placement = \"bottom\"\r\n        >\r\n          {\r\n            <OptionList />\r\n          }\r\n        </Popover>\r\n      </PopoverTouchable>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  content: {\r\n    padding: 16,\r\n    backgroundColor: '#fcfcfc',\r\n    borderRadius: 8,\r\n  },\r\n  arrow: {\r\n    borderTopColor: '#fcfcfc',\r\n  },\r\n  icons: {\r\n    marginRight: 15\r\n  },\r\n  iconsDisabled: {\r\n    marginRight: 15,\r\n    color: '#ccc'\r\n  }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}