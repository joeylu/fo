{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\sites\\\\fo_expo\\\\fo\\\\app\\\\book\\\\tabbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar TabBar = function (_Component) {\n  _inherits(TabBar, _Component);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar() {\n    _classCallCheck(this, TabBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }\n      }, this.props.title), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }\n      }, this.props.msg), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, this.props.state)));\n    }\n  }]);\n\n  return TabBar;\n}(Component);\n\nexport { TabBar as default };\n\nfunction BookSection(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation,\n      position = _ref.position;\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: \"tabPress\",\n        target: route.key\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: \"tabLongPress\",\n        target: route.key\n      });\n    };\n\n    var inputRange = state.routes.map(function (_, i) {\n      return i;\n    });\n    var opacity = Animated.interpolate(position, {\n      inputRange: inputRange,\n      outputRange: inputRange.map(function (i) {\n        return i === index ? 1 : 0;\n      })\n    });\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? [\"selected\"] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, React.createElement(Animated.Text, {\n      style: {\n        opacity: opacity\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, label));\n  }));\n}","map":{"version":3,"sources":["C:/sites/fo_expo/fo/app/book/tabbar.js"],"names":["React","Component","TabBar","props","title","msg","state","BookSection","descriptors","navigation","position","flexDirection","paddingTop","routes","map","route","index","options","key","label","tabBarLabel","undefined","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","inputRange","_","i","opacity","Animated","interpolate","outputRange","tabBarAccessibilityLabel","tabBarTestID","flex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, ScrollView, Text, StyleSheet } from \"react-native\";\r\n\r\nexport default class TabBar extends Component {\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text>{this.props.title}</Text>\r\n        <ScrollView>\r\n          <Text>{this.props.msg}</Text>\r\n          <Text>{this.props.state}</Text>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nfunction BookSection({ state, descriptors, navigation, position }) {\r\n  return (\r\n    <View style={{ flexDirection: \"row\", paddingTop: 20 }}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n            ? options.title\r\n            : route.name;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n          });\r\n\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n          });\r\n        };\r\n        // modify inputRange for custom behavior\r\n        const inputRange = state.routes.map((_, i) => i);\r\n        const opacity = Animated.interpolate(position, {\r\n          inputRange,\r\n          outputRange: inputRange.map((i) => (i === index ? 1 : 0)),\r\n        });\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            accessibilityRole=\"button\"\r\n            accessibilityStates={isFocused ? [\"selected\"] : []}\r\n            accessibilityLabel={options.tabBarAccessibilityLabel}\r\n            testID={options.tabBarTestID}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n            style={{ flex: 1 }}\r\n          >\r\n            <Animated.Text style={{ opacity }}>{label}</Animated.Text>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}